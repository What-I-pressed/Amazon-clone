import React, { useState } from "react";
import axios from "axios";

interface CartItem {
  id: number;
  name: string;
  price: number;
  qty: number;
  image: string;
}

const CheckoutPage: React.FC = () => {
  // üõí —Ç–∏–º—á–∞—Å–æ–≤—ñ –¥–∞–Ω—ñ (–º–æ–∂–Ω–∞ –∑–∞–º—ñ–Ω–∏—Ç–∏ –Ω–∞ CartContext –∞–±–æ Redux)
  const [cart] = useState<CartItem[]>([
    { id: 1, name: "–ù–æ—É—Ç–±—É–∫ Acer Aspire 5", price: 18999, qty: 1, image: "/banner.png" },
    { id: 2, name: "–ù–∞–≤—É—à–Ω–∏–∫–∏ Sony WH-1000XM5", price: 12999, qty: 2, image: "/banner.png" },
  ]);

  // üìå state –¥–ª—è —Ñ–æ—Ä–º–∏
  const [fullName, setFullName] = useState("");
  const [email, setEmail] = useState("");
  const [phone, setPhone] = useState("");
  const [address, setAddress] = useState("");
  const [city, setCity] = useState("");
  const [postalCode, setPostalCode] = useState("");
  const [delivery, setDelivery] = useState("courier");
  const [paymentMethod, setPaymentMethod] = useState("Credit Card");

  const [message, setMessage] = useState<string | null>(null);

  // üí∞ —Å—É–º–∞
  const total = cart.reduce((sum, item) => sum + item.price * item.qty, 0);

  // üì§ submit
  const handleSubmit = async () => {
    if (!address || !fullName || !phone || !email) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è");
      return;
    }

    const order = {
      items: cart.map((item) => ({
        id: item.id,
        name: item.name,
        price: item.price,
        quantity: item.qty,
      })),
      shippingInfo: {
        fullName,
        email,
        phone,
        address,
        city,
        postalCode,
      },
      paymentMethod,
      totalPrice: total,
    };

    try {
      await axios.post("http://localhost:8080/api/orders", order);
      setMessage("‚úÖ –ó–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ!");
    } catch (error: any) {
      setMessage("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è: " + (error.response?.data || error.message));
    }
  };

  return (
    <div className="p-6 max-w-3xl mx-auto space-y-6">
      <h1 className="text-2xl font-bold mb-4">–û—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h1>

      {/* –ö–æ–Ω—Ç–∞–∫—Ç–∏ */}
      <div className="bg-white shadow rounded-xl p-4">
        <h2 className="text-lg font-semibold mb-2">–ö–æ–Ω—Ç–∞–∫—Ç–Ω—ñ –¥–∞–Ω—ñ</h2>
        <input
          type="text"
          placeholder="–ü–æ–≤–Ω–µ —ñ–º‚Äô—è"
          value={fullName}
          onChange={(e) => setFullName(e.target.value)}
          className="w-full border rounded-lg p-2 mb-2"
        />
        <input
          type="email"
          placeholder="Email"
          value={email}
          onChange={(e) => setEmail(e.target.value)}
          className="w-full border rounded-lg p-2 mb-2"
        />
        <input
          type="tel"
          placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
          value={phone}
          onChange={(e) => setPhone(e.target.value)}
          className="w-full border rounded-lg p-2"
        />
      </div>

      {/* –ê–¥—Ä–µ—Å–∞ */}
      <div className="bg-white shadow rounded-xl p-4">
        <h2 className="text-lg font-semibold mb-2">–ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏</h2>
        <input
          type="text"
          placeholder="–ê–¥—Ä–µ—Å–∞"
          value={address}
          onChange={(e) => setAddress(e.target.value)}
          className="w-full border rounded-lg p-2 mb-2"
        />
        <input
          type="text"
          placeholder="–ú—ñ—Å—Ç–æ"
          value={city}
          onChange={(e) => setCity(e.target.value)}
          className="w-full border rounded-lg p-2 mb-2"
        />
        <input
          type="text"
          placeholder="–ü–æ—à—Ç–æ–≤–∏–π —ñ–Ω–¥–µ–∫—Å"
          value={postalCode}
          onChange={(e) => setPostalCode(e.target.value)}
          className="w-full border rounded-lg p-2"
        />
      </div>

      {/* –°–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏ */}
      <div className="bg-white shadow rounded-xl p-4">
        <h2 className="text-lg font-semibold mb-2">–°–ø–æ—Å—ñ–± –¥–æ—Å—Ç–∞–≤–∫–∏</h2>
        <label className="block">
          <input
            type="radio"
            value="courier"
            checked={delivery === "courier"}
            onChange={(e) => setDelivery(e.target.value)}
          />{" "}
          –ö—É—Ä'—î—Ä (100‚Ç¥)
        </label>
        <label className="block">
          <input
            type="radio"
            value="pickup"
            checked={delivery === "pickup"}
            onChange={(e) => setDelivery(e.target.value)}
          />{" "}
          –°–∞–º–æ–≤–∏–≤—ñ–∑ (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ)
        </label>
      </div>

      {/* –û–ø–ª–∞—Ç–∞ */}
      <div className="bg-white shadow rounded-xl p-4">
        <h2 className="text-lg font-semibold mb-2">–ú–µ—Ç–æ–¥ –æ–ø–ª–∞—Ç–∏</h2>
        <label className="block">
          <input
            type="radio"
            name="payment"
            value="Credit Card"
            checked={paymentMethod === "Credit Card"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />{" "}
          –ë–∞–Ω–∫—ñ–≤—Å—å–∫–∞ –∫–∞—Ä—Ç–∫–∞
        </label>
        <label className="block">
          <input
            type="radio"
            name="payment"
            value="PayPal"
            checked={paymentMethod === "PayPal"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />{" "}
          PayPal
        </label>
        <label className="block">
          <input
            type="radio"
            name="payment"
            value="Cash on Delivery"
            checked={paymentMethod === "Cash on Delivery"}
            onChange={(e) => setPaymentMethod(e.target.value)}
          />{" "}
          –ü—ñ—Å–ª—è–ø–ª–∞—Ç–∞
        </label>
      </div>

      {/* –û–≥–ª—è–¥ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è */}
      <div className="bg-white shadow rounded-xl p-4">
        <h2 className="text-lg font-semibold mb-4">–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h2>
        <ul className="space-y-3">
          {cart.map((item) => (
            <li key={item.id} className="flex items-center gap-4">
              <img
                src={item.image}
                alt={item.name}
                className="w-16 h-16 object-cover rounded-lg"
              />
              <div className="flex-1">
                <h3 className="font-semibold">{item.name}</h3>
                <p className="text-sm text-gray-500">
                  {item.qty} x {item.price}‚Ç¥
                </p>
              </div>
              <p className="font-bold">{item.price * item.qty}‚Ç¥</p>
            </li>
          ))}
        </ul>
        <div className="text-right font-bold mt-4">–†–∞–∑–æ–º: {total}‚Ç¥</div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ */}
      <button
        onClick={handleSubmit}
        className="w-full bg-blue-600 text-white py-3 rounded-lg font-semibold hover:bg-blue-700"
      >
        –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è
      </button>

      {message && <p className="text-center mt-4">{message}</p>}
    </div>
  );
};

export default CheckoutPage;
